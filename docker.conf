# Template for Spark Job Server Docker config
# You can easily override the spark master through SPARK_MASTER env variable
#
# Spark Cluster / Job Server configuration
spark {
  #
  master = "local[4]"
  master = ${?SPARK_MASTER}

  # Default # of CPUs for jobs to use for Spark standalone cluster
  job-number-cpus = 4
  spray.can.server {
    idle-timeout = 360 s
    request-timeout = 300 s
  }

  jobserver {
    port = 8090
    jobdao = spark.jobserver.io.JobSqlDAO
 jar-store-rootdir = /tmp/spark-jobserver/jars
filedao {
  rootdir = /tmp/spark-jobserver/filedao/data
}
    context-per-jvm = false
#context-creation-timeout = "360 s"
    sqldao {
      # Directory where default H2 driver stores its data. Only needed for H2.
      rootdir = /database

      # Full JDBC URL / init string.  Sorry, needs to match above.
      # Substitutions may be used to launch job-server, but leave it out here in the default or tests won't pass
      jdbc.url = "jdbc:h2:file:/database/h2-db"
    }
  }

  # predefined Spark contexts
 #  contexts {
 #    sql-context {
 #      num-cpu-cores = 2           # Number of cores to allocate.  Required.
 #      memory-per-node = 512m         # Executor memory per node, -Xmx style eg 512m, 1G, etc.
#       context-factory = spark.jobserver.context.SQLContextFactory
#     }
     # define additional contexts here
#   }

  # universal context configuration.  These settings can be overridden, see README.md
  context-settings {
    num-cpu-cores = 2           # Number of cores to allocate.  Required.
    memory-per-node = 512m         # Executor memory per node, -Xmx style eg 512m, #1G, etc.
    spark.ui.port=4040
    # in case spark distribution should be accessed from HDFS (as opposed to being installed on every mesos slave)
    # spark.executor.uri = "hdfs://namenode:8020/apps/spark/spark.tgz"
    spark.mesos.executor.home = "/opt/spark"

    # uris of jars to be loaded into the classpath for this context. Uris is a string list, or a string separated by commas ','
    # dependent-jar-uris = ["file:///some/path/present/in/each/mesos/slave/somepackage.jar"]

    # If you wish to pass any settings directly to the sparkConf as-is, add them here in passthrough,
    # such as hadoop connection settings that don't use the "spark." prefix
    passthrough {
      #es.nodes = "192.1.1.1"
    }
  }

  # This needs to match SPARK_HOME for cluster SparkContexts to be created successfully
  home = "/opt/spark"
}

# Note that you can use this file to define settings not only for job server,
# but for your Spark jobs as well.  Spark job configuration merges with this configuration file as defaults.
